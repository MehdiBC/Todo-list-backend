name: Build and deploy container todo app

on:
  push:
    branches:
      - master
  workflow_dispatch:
jobs:
  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: stefanoeb/eslint-action@1.0.2
        with:
          files: src/
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - run: npm install
      - run: npm test
  Package:
    needs:
      - Linting
      - Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/todo-app:latest

  Deploy:
    needs: Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy in EC2
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.EC2_HOSTNAME }}
          USER_NAME: ubuntu

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
            ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            sudo docker container stop todo-app
            sudo docker container rm todo-app
            sudo docker image rm ${{ secrets.DOCKER_HUB_USERNAME }}/todo-app
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/todo-app:latest
            sudo docker run -d -p 80:3000 --name todo-app ${{ secrets.DOCKER_HUB_USERNAME }}/todo-app
          '
